// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model user {
    id        BigInt   @id @default(autoincrement())
    email     String   @unique
    password  String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    expert   expert?
    business business?
    sessions session[]
}

model session {
    id        BigInt   @id @default(autoincrement())
    userId    BigInt
    token     String   @unique
    expires   DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user user @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model expert {
    id                  BigInt                   @id @default(autoincrement())
    userId              BigInt                   @unique
    name                String
    profilePicture      String?
    professionalTitle   String
    yearsOfExperience   Int
    areasOfExpertise    FinancialExpertiseArea[]
    certifications      FinancialCertification[]
    hourlyRate          Float
    location            String
    remoteOnly          Boolean                  @default(false)
    availability        Json?
    bio                 String                   @db.Text
    professionalSummary String                   @db.Text
    linkedinUrl         String?
    websiteUrl          String?
    languages           String[]
    createdAt           DateTime                 @default(now())
    updatedAt           DateTime                 @updatedAt

    user user @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum CompanySize {
    SMALL
    MEDIUM
    LARGE
}

model business {
    id             BigInt      @id @default(autoincrement())
    userId         BigInt      @unique
    companyName    String
    description    String      @db.Text
    industryType   String
    companySize    CompanySize
    location       String
    servicesNeeded String[]
    budgetMin      Float
    budgetMax      Float
    timeline       String
    createdAt      DateTime    @default(now())
    updatedAt      DateTime    @updatedAt

    user user @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum FinancialExpertiseArea {
    INVESTMENT_MANAGEMENT
    FINANCIAL_PLANNING
    WEALTH_MANAGEMENT
    RISK_MANAGEMENT
    TAX_PLANNING
    ESTATE_PLANNING
    RETIREMENT_PLANNING
    CORPORATE_FINANCE
    MERGERS_AND_ACQUISITIONS
    PRIVATE_EQUITY
    VENTURE_CAPITAL
    REAL_ESTATE_INVESTMENT
    PORTFOLIO_MANAGEMENT
    ASSET_ALLOCATION
    ESG_INVESTING
    CRYPTOCURRENCY
}

enum FinancialCertification {
    CFA
    CFP
    CPA
    CHFC
    CAIA
    FRM
    SERIES_7
    SERIES_63
    SERIES_65
}
